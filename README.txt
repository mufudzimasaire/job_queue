In solving this problem, I employed my 'investigate first' approach. This approach involves attempting to solve the problem using the Interactive Ruby Shell (irb), which generally enables me to better understand the nature of the problem as well as come up with ideas on how to best solve the problem.

Having solved the problem through my investigation (see notes.rb), I then grouped my code logically, eg. String Parsing code and Job Ordering code. At this point, I knew that my solution would include services to parse the string input, validate the parsed input, order the jobs as well as handle exceptions. These services would be namespaced under the module name 'Job', so as to make the feature modular, thus making it easier to reuse and maintain. Furthermore, this would mean that the module classes adher to the Single Responsibility Principle, as each class would have a specified role. With this in mind, I started writing tests around the code I had wrote during the investigation stage as well as the envisaged/hypothetical module architecture/structure (Please check commit history).

As a keen problem solver, I found tackling this problem quite immersing and enjoyable. Moreover, it has given me the opportunity to exhibit my much improved ruby skills :-)